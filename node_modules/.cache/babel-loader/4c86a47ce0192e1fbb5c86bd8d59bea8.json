{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const todoSlice = createSlice({\n  name: 'toDo',\n  initialState: {\n    todoList: [{\n      id: 1,\n      content: \"Hit the gym\"\n    }, {\n      id: 2,\n      content: \"Meet George\"\n    }]\n  },\n  reducers: {\n    createTodo: (state, action) => {\n      let newTodoList = {\n        id: Math.random(),\n        content: action.payload.newContent\n      };\n      state.todoList.push(newTodoList);\n    },\n    deleteToDo: (state, action) => {\n      let {\n        todoList\n      } = state;\n      state.todoList = todoList.filter(item => item.id !== action.payload.id);\n    },\n    editTodo: (state, action) => {\n      let {\n        todoList\n      } = state;\n      state.todoList = todoList.map(item => item.id === action.payload.id ? action.payload : item);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addToDo,\n  deleteToDo,\n  editTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","todoSlice","name","initialState","todoList","id","content","reducers","createTodo","state","action","newTodoList","Math","random","payload","newContent","push","deleteToDo","filter","item","editTodo","map","addToDo","actions","reducer"],"sources":["C:/Users/aditya/Downloads/ReactJS/reactpractice/src/features/todo/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoSlice = createSlice({\r\n    name: 'toDo',\r\n    initialState: {\r\n      todoList:   [\r\n        { id: 1, content: \"Hit the gym\" },\r\n        { id: 2, content: \"Meet George\"}\r\n      ]\r\n    },\r\n    reducers: {\r\n      createTodo: (state, action) => {\r\n        let newTodoList = {\r\n          id: Math.random(),\r\n          content: action.payload.newContent\r\n        }\r\n        state.todoList.push(newTodoList);\r\n      },\r\n      deleteToDo: (state, action) => {\r\n        let { todoList } = state;\r\n        state.todoList = todoList.filter((item) => \r\n            item.id !==action.payload.id);\r\n      },\r\n      editTodo: (state, action) => {\r\n        let { todoList } = state;\r\n        state.todoList = todoList.map((item) => \r\n          item.id === action.payload.id ? action.payload : item);\r\n      }\r\n     },\r\n   })\r\n   // Action creators are generated for each case reducer function\r\n   export const { addToDo, deleteToDo, editTodo } = todoSlice.actions\r\n   export default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAD2B;EAEjCC,YAAY,EAAE;IACZC,QAAQ,EAAI,CACV;MAAEC,EAAE,EAAE,CAAN;MAASC,OAAO,EAAE;IAAlB,CADU,EAEV;MAAED,EAAE,EAAE,CAAN;MAASC,OAAO,EAAE;IAAlB,CAFU;EADA,CAFmB;EAQjCC,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7B,IAAIC,WAAW,GAAG;QAChBN,EAAE,EAAEO,IAAI,CAACC,MAAL,EADY;QAEhBP,OAAO,EAAEI,MAAM,CAACI,OAAP,CAAeC;MAFR,CAAlB;MAIAN,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoBL,WAApB;IACD,CAPO;IAQRM,UAAU,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC7B,IAAI;QAAEN;MAAF,IAAeK,KAAnB;MACAA,KAAK,CAACL,QAAN,GAAiBA,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAC7BA,IAAI,CAACd,EAAL,KAAWK,MAAM,CAACI,OAAP,CAAeT,EADb,CAAjB;IAED,CAZO;IAaRe,QAAQ,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;MAC3B,IAAI;QAAEN;MAAF,IAAeK,KAAnB;MACAA,KAAK,CAACL,QAAN,GAAiBA,QAAQ,CAACiB,GAAT,CAAcF,IAAD,IAC5BA,IAAI,CAACd,EAAL,KAAYK,MAAM,CAACI,OAAP,CAAeT,EAA3B,GAAgCK,MAAM,CAACI,OAAvC,GAAiDK,IADlC,CAAjB;IAED;EAjBO;AARuB,CAAD,CAA7B,C,CA4BJ;;AACA,OAAO,MAAM;EAAEG,OAAF;EAAWL,UAAX;EAAuBG;AAAvB,IAAoCnB,SAAS,CAACsB,OAApD;AACP,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}